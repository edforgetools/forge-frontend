import { vi } from "vitest";

// Mock IntersectionObserver
global.IntersectionObserver = vi.fn().mockImplementation(() => ({
  observe: vi.fn(),
  unobserve: vi.fn(),
  disconnect: vi.fn(),
}));

// Mock ResizeObserver
global.ResizeObserver = vi.fn().mockImplementation(() => ({
  observe: vi.fn(),
  unobserve: vi.fn(),
  disconnect: vi.fn(),
}));

// Mock matchMedia
Object.defineProperty(window, "matchMedia", {
  writable: true,
  value: vi.fn().mockImplementation((query) => ({
    matches: false,
    media: query,
    onchange: null,
    addListener: vi.fn(),
    removeListener: vi.fn(),
    addEventListener: vi.fn(),
    removeEventListener: vi.fn(),
    dispatchEvent: vi.fn(),
  })),
});

// Mock canvas context
HTMLCanvasElement.prototype.getContext = vi.fn().mockReturnValue({
  fillRect: vi.fn(),
  clearRect: vi.fn(),
  getImageData: vi.fn(),
  putImageData: vi.fn(),
  createImageData: vi.fn(),
  setTransform: vi.fn(),
  drawImage: vi.fn(),
  save: vi.fn(),
  restore: vi.fn(),
  beginPath: vi.fn(),
  moveTo: vi.fn(),
  lineTo: vi.fn(),
  closePath: vi.fn(),
  stroke: vi.fn(),
  fill: vi.fn(),
  measureText: vi.fn().mockReturnValue({ width: 100 }),
  transform: vi.fn(),
  translate: vi.fn(),
  scale: vi.fn(),
  rotate: vi.fn(),
  arc: vi.fn(),
  fillText: vi.fn(),
  strokeText: vi.fn(),
  setLineDash: vi.fn(),
  getLineDash: vi.fn().mockReturnValue([]),
  setLineDashOffset: vi.fn(),
  getLineDashOffset: vi.fn().mockReturnValue(0),
  setLineCap: vi.fn(),
  getLineCap: vi.fn().mockReturnValue("butt"),
  setLineJoin: vi.fn(),
  getLineJoin: vi.fn().mockReturnValue("miter"),
  setLineWidth: vi.fn(),
  getLineWidth: vi.fn().mockReturnValue(1),
  setMiterLimit: vi.fn(),
  getMiterLimit: vi.fn().mockReturnValue(10),
  setStrokeStyle: vi.fn(),
  getStrokeStyle: vi.fn().mockReturnValue("#000000"),
  setFillStyle: vi.fn(),
  getFillStyle: vi.fn().mockReturnValue("#000000"),
  setGlobalAlpha: vi.fn(),
  getGlobalAlpha: vi.fn().mockReturnValue(1),
  setGlobalCompositeOperation: vi.fn(),
  getGlobalCompositeOperation: vi.fn().mockReturnValue("source-over"),
  setShadowColor: vi.fn(),
  getShadowColor: vi.fn().mockReturnValue("rgba(0, 0, 0, 0)"),
  setShadowBlur: vi.fn(),
  getShadowBlur: vi.fn().mockReturnValue(0),
  setShadowOffsetX: vi.fn(),
  getShadowOffsetX: vi.fn().mockReturnValue(0),
  setShadowOffsetY: vi.fn(),
  getShadowOffsetY: vi.fn().mockReturnValue(0),
  setFont: vi.fn(),
  getFont: vi.fn().mockReturnValue("10px sans-serif"),
  setTextAlign: vi.fn(),
  getTextAlign: vi.fn().mockReturnValue("start"),
  setTextBaseline: vi.fn(),
  getTextBaseline: vi.fn().mockReturnValue("alphabetic"),
  createLinearGradient: vi.fn(),
  createRadialGradient: vi.fn(),
  createPattern: vi.fn(),
  bezierCurveTo: vi.fn(),
  quadraticCurveTo: vi.fn(),
  rect: vi.fn(),
  arcTo: vi.fn(),
  isPointInPath: vi.fn().mockReturnValue(false),
  isPointInStroke: vi.fn().mockReturnValue(false),
  clip: vi.fn(),
  resetClip: vi.fn(),
});
