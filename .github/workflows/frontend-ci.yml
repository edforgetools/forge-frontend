name: Frontend CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.15.9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm i --frozen-lockfile

      - name: Lint
        run: pnpm lint

      - name: Type check
        run: pnpm typecheck

      - name: Build
        run: pnpm build

      - name: Install Playwright browsers
        run: pnpm exec playwright install --with-deps

      - name: Start server and run Playwright tests
        run: |
          echo "Starting preview server..."
          # Start server directly with vite to have full control over arguments
          npx vite preview --port 4173 --host 127.0.0.1 &
          SERVER_PID=$!
          echo "Server PID: $SERVER_PID"

          # Wait for server to start
          echo "Waiting for server to start..."
          for i in {1..30}; do
            if curl -f http://127.0.0.1:4173 > /dev/null 2>&1; then
              echo "Server is ready after $((i*2)) seconds!"
              break
            fi
            echo "Attempt $i: Server not ready yet, waiting..."
            sleep 2
            if [ $i -eq 30 ]; then
              echo "Server failed to start after 60 seconds"
              echo "Checking if server process is still running..."
              ps aux | grep preview || echo "No preview process found"
              exit 1
            fi
          done

          echo "Server health check passed!"
          echo "Running Playwright tests..."

          # Run tests with server running - use ci-basic.spec.ts for CI reliability
          pnpm exec playwright test ci-basic.spec.ts --project=chromium
          echo "Playwright tests completed successfully!"

          # Clean up server
          echo "Stopping server..."
          kill $SERVER_PID || echo "Server already stopped"
        env:
          PLAYWRIGHT_BASE_URL: http://127.0.0.1:4173

      - name: Run Lighthouse CI
        run: |
          echo "Starting preview server for Lighthouse..."
          # Start server directly with vite
          npx vite preview --port 4173 --host 127.0.0.1 &
          SERVER_PID=$!
          echo "Server PID: $SERVER_PID"

          # Wait for server to start
          echo "Waiting for server to start..."
          for i in {1..30}; do
            if curl -f http://127.0.0.1:4173 > /dev/null 2>&1; then
              echo "Server is ready after $((i*2)) seconds!"
              break
            fi
            echo "Attempt $i: Server not ready yet, waiting..."
            sleep 2
            if [ $i -eq 30 ]; then
              echo "Server failed to start after 60 seconds"
              exit 1
            fi
          done

          echo "Running Lighthouse CI..."
          npx @lhci/cli autorun --collect.staticDistDir=dist --config=lighthouserc.json --upload.target=temporary-public-storage
          echo "Lighthouse CI completed successfully!"

          # Clean up server
          echo "Stopping server..."
          kill $SERVER_PID || echo "Server already stopped"
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'